name: CI

on: [push, pull_request]

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-2.7-${{ hashFiles('**/Gemfile.lock') }}
    - name: Run benchmarks
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle exec rake partial_benchmark
        bundle exec rake translatable_benchmark
  test:
    name: test (Rails ${{ matrix.versions.rails }}, Ruby ${{ matrix.versions.ruby }}, ${{ matrix.mode }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        versions:
          - { ruby: "2.7", rails: "5.2" }
          - { ruby: "2.7", rails: "6.0" }
          - { ruby: "2.7", rails: "6.1" }
          - { ruby: "3.0", rails: "7.0" }
          - { ruby: "3.1", rails: "main" }
        mode: ['capture_patch_enabled', 'capture_patch_disabled']
    env:
      BUNDLE_GEMFILE: gemfiles/rails_${{ matrix.versions.rails }}.gemfile
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.versions.ruby }}
    - name: Determine dependency versions
      run: |
        bundle config path vendor/bundle
        bundle
        bundle exec appraisal rails-${{ matrix.versions.rails }} bundle lock
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-${{ matrix.versions.rails }}-ruby-${{ matrix.versions.ruby }}-${{ hashFiles(format('**/gemfiles/rails_{0}.gemfile.lock', matrix.versions.rails)) }}
    - name: Build and test with Rake
      run: |
        bundle exec appraisal rails-${{ matrix.versions.rails }} bundle
        bundle exec appraisal rails-${{ matrix.versions.rails }} rake
      env:
        RAISE_ON_WARNING: 0
        MEASURE_COVERAGE: true
        RAILS_VERSION: ${{ matrix.versions.rails }}
        CAPTURE_PATCH_ENABLED: ${{ matrix.mode == 'capture_patch_enabled' && 'true' || 'false' }}
    - name: Upload coverage results
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: simplecov-resultset-rails${{matrix.versions.rails}}-ruby${{matrix.versions.ruby}}
        path: coverage
  pvc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        repository: 'primer/view_components'
        path: 'primer_view_components'
    - uses: actions/checkout@master
      with:
        path: 'view_component'
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - uses: actions/cache@v2
      with:
        path: |
          node_modules
          vendor/bundle
        key: gems-build-pvc-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/package-json.lock') }}
    - name: Build and test with Rake
      run: |
        cd primer_view_components
        npm ci
        cd demo && npm ci && cd ..
        bundle config path vendor/bundle
        bundle install
        bundle exec rake docs:preview
        bundle exec rake
      env:
        VIEW_COMPONENT_PATH: ../view_component
        RAILS_VERSION: '~> 6.1.0'
        PARALLEL_WORKERS: '1'
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7
    - name: Download coverage results
      uses: actions/download-artifact@v2
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: gems-build-rails-main-ruby-2.7-${{ hashFiles('**/Gemfile.lock') }}
    - name: Collate simplecov
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle exec rake coverage:report
      env:
        RAILS_VERSION: '~> 7.0.0'
